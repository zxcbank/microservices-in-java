
server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: web-gateway

  kafka:
    bootstrap-servers: localhost:9092
    properties:
      security.protocol: PLAINTEXT

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      backs: all
      retries: 3

    consumer:
      group-id: web-gateway-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.example.gateway.dto"
        spring.json.use.type.headers: false

  datasource:
    url: jdbc:postgresql://localhost:5432/gateway_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/myrealm
          jwk-set-uri: http://keycloak:8080/realms/myrealm/protocol/openid-connect/certs

kafka:
  topics:
    pet-requests: pets.request
    pet-replies: pets.reply
    owner-requests: owners.request
    owner-replies: owners.reply

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.apache.kafka: WARN
    com.example.gateway: DEBUG
  file:
    name: logs/gateway.log